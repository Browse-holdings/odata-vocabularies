<root>
	<!-- Do we need to solve for allof/anyof type scenarios -->
	<!-- Navigation restrictions sample is needed -->

<!-- 
Thought process is to represent user by defining scopes on that resource with available properties using that scope.
Alternatively, we could list the properties and then all the scopes that can get access to that property. 


Users
- Scope 1 (P1, P2, P3)
- Scope 2 (P2, P3)
- Scope 3 (P2, P3)
- Scope 5 (P4)

Users
- P1 Scope(1)
- P2 Scope(2,3)
- P3 Scope(2,3)
- P4 Scope(5)
-->


	<Annotations Target="microsoft.graph.GraphService/users">
		<Annotation Term="Org.Graph.Vocabulary.InsertRestrictions">
			<Record>
				<PropertyValue Property="QueryParameters">
				</PropertyValue>
				<!-- Sample lists scopes and property restrictions separately.  -->
				<!-- Scopes are defined separate from property restrictions -->
				<!-- Property restrictions use scopes from their definition above.   -->
				<!-- Specific properties that require different scopes are listed in the property restrictions otherwise by convention a scope gets access to all properties.  -->
				<PropertyValue Property="Premissions-1">
					<Record>
						<PropertyValue Property="Scopes">
							<Collection>
								<Record>
									<PropertyValue Property="Scope" String="User.ReadWrite.All" />
									<PropertyValue Property="Scheme" String="DelegatedWork" />
								</Record>
								<Record>
									<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
									<PropertyValue Property="Scheme" String="DelegatedWork" />
								</Record>
								<Record>
									<PropertyValue Property="Scope" String="Directory.AccessAsUser.All" />
									<PropertyValue Property="Scheme" String="DelegatedWork" />
								</Record>
								<Record>
									<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
									<PropertyValue Property="Scheme" String="Application" />
								</Record>
								<Record>
									<PropertyValue Property="Scope" String="Directory.AccessAsUser.All" />
									<PropertyValue Property="Scheme" String="Application" />
								</Record>
							</Collection>
						</PropertyValue>
						<PropertyValue Property="PropertyRestrictions">
							<Collection>
								<Record>
									<PropertyValue Property="Property" String="mailboxSettings" />
									<PropertValue Property="Scopes">
										<Collection>
											<Record>
												<PropertyValue Property="Scope" String="MailboxSettings.ReadWrite" />
												<PropertyValue Property="Scheme" String="DelegatedWork" />
											</Record>
										</Collection>
									</PropertValue>
								</Record>
							</Collection>
						</PropertyValue>
					</Record>
				</PropertyValue>
				<!-- List a collection of scopes along with common properties that provide access to those properties. -->
				<PropertyValue Property="Premissions-2">
					<Record>
						<PropertyValue Property="Scopes">
							<Collection>
								<Record>
									<PropertyValue Property="Scope" String="User.ReadWrite.All, Directory.ReadWrite.All, Directory.AccessAsUser.All" />
									<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
									<PropertyValue Property="Scheme" String="Application" />								
								</Record>
								<!-- <Record>
									<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
									<PropertyValue Property="Scheme" String="DelegatedWork" />
								</Record>
								<Record>
									<PropertyValue Property="Scope" String="Directory.AccessAsUser.All" />
									<PropertyValue Property="Scheme" String="DelegatedWork" />
								</Record> -->
								<Record>
									<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
									<PropertyValue Property="Scheme" String="Application" />
								</Record>
								<Record>
									<PropertyValue Property="Scope" String="Directory.AccessAsUser.All" />
									<PropertyValue Property="Scheme" String="Application" />
								</Record>
							</Collection>
						</PropertyValue>
						<PropertyValue Property="PropertyRestrictions">
							<Collection>
								<Record>
									<PropertyValue Property="Property" String="accountEnabled" />
									<PropertValue Property="Scopes">
										<Collection>
											<Record>
												<PropertyValue Property="Scope" String="User.ReadWrite" />
												<PropertyValue Property="Scheme" String="DelegatedWork" />
											</Record>
										</Collection>
									</PropertValue>
									<PropertyValue Property="Property" String="mailNickname" />
									<PropertValue Property="Scopes">
										<Collection>
											<Record>
												<PropertyValue Property="Scope" String="User.ReadWrite" />
												<PropertyValue Property="Scheme" String="DelegatedWork" />
											</Record>
										</Collection>
									</PropertValue>
									<PropertyValue Property="Property" String="userPrincipalName" />
									<PropertValue Property="Scopes">
										<Collection>
											<Record>
												<PropertyValue Property="Scope" String="User.ReadWrite" />
												<PropertyValue Property="Scheme" String="DelegatedWork" />
											</Record>
										</Collection>
									</PropertValue>
									<PropertyValue Property="Property" String="forceChangePasswordNextSignIn" />
									<PropertValue Property="Scopes">
										<Collection>
											<Record>
												<PropertyValue Property="Scope" String="User.ReadWrite" />
												<PropertyValue Property="Scheme" String="DelegatedWork" />
											</Record>
										</Collection>
									</PropertValue>
									<PropertyValue Property="Property" String="password" />
									<PropertValue Property="Scopes">
										<Collection>
											<Record>
												<PropertyValue Property="Scope" String="User.ReadWrite" />
												<PropertyValue Property="Scheme" String="DelegatedWork" />
											</Record>
										</Collection>
									</PropertValue>

									<PropertyValue Property="Property" String="mailboxSettings" />
									<PropertValue Property="Scopes">
										<Collection>
											<Record>
												<PropertyValue Property="Scope" String="MailboxSettings.ReadWrite" />
												<PropertyValue Property="Scheme" String="DelegatedWork" />
											</Record>
										</Collection>
									</PropertValue>
								</Record>
							</Collection>
						</PropertyValue>
					</Record>
				</PropertyValue>
				<!-- Lists scopes required to perform the given capability. -->
				<!-- By convention, it would allow the operation to be performed on all properties, unless a child record exits with a property &amp; scope called out explicitly. -->
				<PropertyValue Property="Premissions-3">
					<Record>
						<PropertyValue Property="Scopes">
							<Collection>
								<Record>
									<PropertyValue Property="Scope" String="User.ReadWrite.All">
										<Collection>
											<Record>
												<PropertyValue Property="Property" String="mailboxSettings" />
												<PropertValue Property="PropertyScopes">
													<Record>
														<PropertyValue Property="Scope" String="MailboxSettings.ReadWrite" />
													</Record>
												</PropertValue>
											</Record>
										</Collection>
									</PropertyValue>
									<PropertyValue Property="Scheme" String="DelegatedWork" />
								</Record>
								<Record>
									<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
									<PropertyValue Property="Scheme" String="DelegatedWork" />
								</Record>
								<Record>
									<PropertyValue Property="Scope" String="Directory.AccessAsUser.All" />
									<PropertyValue Property="Scheme" String="DelegatedWork" />
								</Record>
								<Record>
									<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
									<PropertyValue Property="Scheme" String="Application" />
								</Record>
								<Record>
									<PropertyValue Property="Scope" String="Directory.AccessAsUser.All" />
									<PropertyValue Property="Scheme" String="Application" />
								</Record>
							</Collection>
						</PropertyValue>
					</Record>
				</PropertyValue>
				<!-- Original design of the scopes property -->
				<PropertyValue Property="Permissions-4">
					<Collection>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<!-- This gets access to all properties unless a property exists on it own. That way we don't have to call out all properties for default scenarios.   -->
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="PropertyType" EnumMember="Capability.PropertyType.IncludedProperties"/>
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="Directory.AccessAsUser.All" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,passwordProfile,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite" />
							<PropertyValue Property="Scheme" String="DelegatedPersonal" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="Application" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="Application" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
					</Collection>
				</PropertyValue>
			</Record>
		</Annotation>
		<Annotation Term="Org.Graph.Vocabulary.UpdateRestrictions">
			<Record>
				<!-- <PropertyValue Property="RequestHeaders">
					<Collection>
						<Record>
							<PropertyValue Property="Name" String="Authorization" />
							<PropertyValue Property="Description" String="Bearer {token}. Required." />
							<PropertyValue Property="Required" Bool="true" />
						</Record>
						<Record>
							<PropertyValue Property="Name" String="Content-Type" />
							<PropertyValue Property="Description" String="application/json" />
							<PropertyValue Property="Required" Bool="true" />
						</Record>
					</Collection>
				</PropertyValue> -->
				<PropertyValue Property="Scopes">
					<!-- Notice that `PasswordProfile` is available only when you use the `Directory.AccessAsUser.All` scope -->
					<Collection>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="PropertyType" EnumMember="Capability.PropertyType.IncludedProperties"/>
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="Directory.AccessAsUser.All" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,passwordProfile,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite" />
							<PropertyValue Property="Scheme" String="DelegatedPersonal" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="Application" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="Application" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
					</Collection>
				</PropertyValue>
			</Record>
		</Annotation>
		<!-- Retrieve restrictions 
		  select restrictions and then props to filter, expand, etc.
		  -->
		<Annotation Term="Org.Graph.Vocabulary.ReadRestrictions">
			<Record>
				<!-- <PropertyValue Property="RequestHeaders">
					<Collection>
						<Record>
							<PropertyValue Property="Name" String="Authorization" />
							<PropertyValue Property="Description" String="Bearer {token}. Required." />
							<PropertyValue Property="Required" Bool="true" />
						</Record>
						<Record>
							<PropertyValue Property="Name" String="Content-Type" />
							<PropertyValue Property="Description" String="application/json" />
							<PropertyValue Property="Required" Bool="true" />
						</Record>
					</Collection>
				</PropertyValue> -->
				<PropertyValue Property="Scopes">
					<!-- Notice that `PasswordProfile` is available only when you use the `Directory.AccessAsUser.All` scope -->
					<Collection>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.Read" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.Read.All" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="Directory.Read.All" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="Directory.AccessAsUser.All" />
							<PropertyValue Property="Scheme" String="DelegatedWork" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,passwordProfile,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.Read" />
							<PropertyValue Property="Scheme" String="DelegatedPersonal" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite" />
							<PropertyValue Property="Scheme" String="Application" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.Read.All" />
							<PropertyValue Property="Scheme" String="Application" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="User.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="Application" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="Directory.Read.All" />
							<PropertyValue Property="Scheme" String="Application" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
						<Record>
							<PropertyValue Property="Scope" String="Directory.ReadWrite.All" />
							<PropertyValue Property="Scheme" String="Application" />
							<PropertyValue Property="Properties" String="accountEnabled,displayName,mailNickname,userPrincipalName,forceChangePasswordNextSignIn,password" />
						</Record>
					</Collection>
				</PropertyValue>
			</Record>
		</Annotation>
		<!-- Define operation restrictions here..collection(operationRestrictions)
		- name (action or function name) or the path. 
		- restrictions
		- NP restrictoins would also have op restrictions -->
	</Annotations>
	<!-- annoations on actions/functions. also demonstrates prefer header  -->
	<Annotations Target="microsoft.graph.reminderView(microsoft.graph.user, Edm.String, Edm.String)">
		<!-- for a path that looks like "GET /users/{id | userPrincipalName}/reminderView(startDateTime=startDateTime-value,endDateTime=endDateTime-value)" -->
		<Annotation Term="Org.Graph.Vocabulary.OperationRestrictions">
			<Collection>
				<Record>
					<PropertyValue Property="OperationName" String="reminderView" />
					<PropertyValue Property="RequestHeaders">
						<Collection>
							<!-- <Record>
								<PropertyValue Property="Name" String="Authorization" />
								<PropertyValue Property="Description" String="Bearer {token}. Required." />
								<PropertyValue Property="Required" Bool="true" />
							</Record> -->
							<!-- <Record>
								<PropertyValue Property="Name" String="Content-Type" />
								<PropertyValue Property="Description" String="application/json" />
								<PropertyValue Property="Required" Bool="true" />
							</Record> -->
							<Record>
								<PropertyValue Property="Name" String="Prefer" />
								<PropertyValue Property="Description" String="{Time-zone}. Optional, UTC assumed if absent." />
								<PropertyValue Property="Required" Bool="true" />
							</Record>
						</Collection>
					</PropertyValue>
					<PropertyValue Property="Scopes">
						<Collection>
							<Record>
								<PropertyValue Property="Scope" String="Calendars.Read" />
								<PropertyValue Property="Scheme" String="DelegatedWork" />
								<PropertyValue Property="Properties" String="changeKey,eventEndTime,eventId,eventLocation,eventStartTime,eventSubject,eventWebLink,reminderFireTime" />
							</Record>
							<Record>
								<PropertyValue Property="Scope" String="Calendars.ReadWrite" />
								<PropertyValue Property="Scheme" String="DelegatedWork" />
								<!-- Absense of the 'Properties' property denotes all properties are available -->
							</Record>
							<Record>
								<PropertyValue Property="Scope" String="Calendars.Read" />
								<PropertyValue Property="Scheme" String="DelegatedPersonal" />
								<PropertyValue Property="Properties" String="changeKey,eventEndTime,eventId,eventLocation,eventStartTime,eventSubject,eventWebLink,reminderFireTime" />
							</Record>
							<Record>
								<PropertyValue Property="Scope" String="Calendars.ReadWrite" />
								<PropertyValue Property="Scheme" String="DelegatedPersonal" />
								<!-- Absense of the 'Properties' property denotes all properties are available -->
							</Record>
							<Record>
								<PropertyValue Property="Scope" String="Calendars.Read" />
								<PropertyValue Property="Scheme" String="Application" />
								<PropertyValue Property="Properties" String="changeKey,eventEndTime,eventId,eventLocation,eventStartTime,eventSubject,eventWebLink,reminderFireTime" />
							</Record>
							<Record>
								<PropertyValue Property="Scope" String="Calendars.ReadWrite" />
								<PropertyValue Property="Scheme" String="Applicaiton" />
								<!-- Absense of the 'Properties' property denotes all properties are available -->
							</Record>
						</Collection>
					</PropertyValue>
				</Record>
			</Collection>
		</Annotation>
	</Annotations>

	<!-- Annotating Navigation Properties example -->
	<!-- Annotating container with Auth Schemes that contain all the scopes applicable per that security scheme. Graph has 3 security schemes, DelegatedWork, DelegatedPersonal, Application -->
	<Annotations Target="microsoft.graph.GraphService">
		<Annotation Term="Auth.Authorizations">
			<Collection>
				<Record Type="Org.OData.Authorization.V1.OAuth2Implicit">
					<PropertyValue Property="Name" String="DelegatedWork"/>
					<PropertyValue Property="AuthorizationUrl" String="https://graph.microsoft.com" />
					<PropertyValue Property="Scopes">
						<Collection>
							<Record>
								<PropertyValue Property="Scope" String="User.ReadAll"></PropertyValue>
								<PropertyValue Property="Description" String="Read all user data"></PropertyValue>
							</Record>
							<Record>
								<PropertyValue Property="Scope" String="User.WriteAll"></PropertyValue>
								<PropertyValue Property="Description" String="Write all user data"></PropertyValue>
							</Record>
							<Record>
								<PropertyValue Property="Scope" String="Directory.ReadAll"></PropertyValue>
								<PropertyValue Property="Description" String="Write to directory"></PropertyValue>
							</Record>
						</Collection>
					</PropertyValue>
					<PropertyValue Property="RefreshUrl" String="https://refreshUrl" />
				</Record>
				<Record Type="Org.OData.Authorization.V1.OAuth2Implicit">
					<PropertyValue Property="Name" String="DelegatedPersonal"/>
					<PropertyValue Property="AuthorizationUrl" String="https://graph.microsoft.com" />
					<PropertyValue Property="Scopes">
						<Collection>
							<Record>
								<PropertyValue Property="Scope" String="User.ReadAll"></PropertyValue>
								<PropertyValue Property="Description" String="Read all user data"></PropertyValue>
							</Record>
							<Record>
								<PropertyValue Property="Scope" String="User.WriteAll"></PropertyValue>
								<PropertyValue Property="Description" String="Write all user data"></PropertyValue>
							</Record>
							<Record>
								<PropertyValue Property="Scope" String="Directory.ReadAll"></PropertyValue>
								<PropertyValue Property="Description" String="Write to directory"></PropertyValue>
							</Record>
						</Collection>
					</PropertyValue>
					<PropertyValue Property="RefreshUrl" String="https://refreshUrl" />
				</Record>
				<Record Type="Org.OData.Authorization.V1.OAuth2Implicit">
					<PropertyValue Property="Name" String="Application"/>
					<PropertyValue Property="AuthorizationUrl" String="https://graph.microsoft.com" />
					<PropertyValue Property="Scopes">
						<Collection>
							<Record>
								<PropertyValue Property="Scope" String="User.ReadAll"></PropertyValue>
								<PropertyValue Property="Description" String="Read all user data"></PropertyValue>
							</Record>
							<Record>
								<PropertyValue Property="Scope" String="User.WriteAll"></PropertyValue>
								<PropertyValue Property="Description" String="Write all user data"></PropertyValue>
							</Record>
							<Record>
								<PropertyValue Property="Scope" String="Directory.ReadAll"></PropertyValue>
								<PropertyValue Property="Description" String="Write to directory"></PropertyValue>
							</Record>
						</Collection>
					</PropertyValue>
					<PropertyValue Property="RefreshUrl" String="https://refreshUrl" />
				</Record>
			</Collection>
		</Annotation>
		<Annotation Term="Capabilities.ServiceConfiguration">
			<PropertyValue Property="ServiceHeaders">
				<Collection>
					<Record>
						<PropertyValue Property="Name" String="Authorization" />
						<PropertyValue Property="Description" String="Bearer {token}. Required." />
						<PropertyValue Property="Required" Bool="true" />
					</Record>
					<Record>
						<PropertyValue Property="Name" String="Content-Type" />
						<PropertyValue Property="Description" String="application/json" />
						<PropertyValue Property="Required" Bool="true" />
					</Record>
				</Collection>
			</PropertyValue>
		</Annotation>
	</Annotations>
</root>